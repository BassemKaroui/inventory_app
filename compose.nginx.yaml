services:
  postgresdb:
    image: postgres:16-alpine
    env_file:
      - .env/postgres.env
    restart: unless-stopped
    volumes:
      - postgres_vol:/var/lib/postgresql/data

  nginx:
    container_name: nginx
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/vhost:/etc/nginx/vhost.d
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  letsencrypt-companion:
    container_name: letsencrypt-companion
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: unless-stopped
    volumes_from:
        - nginx
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./nginx/certs:/etc/nginx/certs:rw
        # - ./nginx/acme:/etc/acme.sh
    environment:
        DEFAULT_EMAIL: bassem.karoui1@gmail.com
    profiles:
      - certs

  inventory-app:
    build:
      context: .
      # dockerfile: Dockerfile
      args:
        - ENVIRONMENT=production
    env_file:
      - .env/postgres.env
    expose:
      - 8080
    ports:
      - "8000:8080"
    volumes:
      - ./models:/usr/src/inventory_app/models
    restart: unless-stopped
    depends_on:
      - postgresdb
    environment:
      VIRTUAL_HOST: homelab-bk.fr.to # FOR MULTI-DOMAIN CERTIFICATES: homelab-bk.fr.to,www.homelab-bk.fr.to
      VIRTUAL_PATH: /api/v1/
      # VIRTUAL_DEST: /
      # VIRTUAL_PORT: "8080" # no need to specify the port since it's exposed in the Dockerfile
      LETSENCRYPT_HOST: homelab-bk.fr.to # FOR MULTI-DOMAIN CERTIFICATES: homelab-bk.fr.to,www.homelab-bk.fr.to

  inventory-app-dev:
    build:
      context: .
      # dockerfile: Dockerfile
      args:
        - ENVIRONMENT=development
    env_file:
      - .env/postgres.env
    ports:
      - "9999:8888"
    stdin_open: true
    tty: true
    command: [ "sh" ]
    volumes:
      - .:/usr/src/inventory_app
    depends_on:
      - postgresdb
    profiles:
      - dev

  pgadmin:
    image: dpage/pgadmin4:8.5
    env_file:
      - .env/pgadmin.env
    restart: unless-stopped
    volumes:
      - pgadmin_vol:/var/lib/pgadmin
    depends_on:
      - postgresdb
    profiles:
      - dev
    environment:
      SCRIPT_NAME: /pgadmin # needed for the reverse proxy to work
      VIRTUAL_HOST: homelab-bk.fr.to
      VIRTUAL_PATH: /pgdamin/
      # VIRTUAL_PORT: "80" # no need to specify the port
      LETSENCRYPT_HOST: homelab-bk.fr.to

volumes:
  postgres_vol: {}
  pgadmin_vol: {}
