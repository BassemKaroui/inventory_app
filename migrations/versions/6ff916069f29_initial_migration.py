"""initial migration

Revision ID: 6ff916069f29
Revises:
Create Date: 2024-05-07 19:13:53.715986

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6ff916069f29"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "inventory",
        sa.Column(
            "id",
            sa.UUID(as_uuid=True),
            nullable=False,
            server_default=sa.text("uuid_generate_v4()"),
        ),
        # First install the extension: CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
        # and verify it was installed: SELECT * FROM pg_extension WHERE extname = 'uuid-ossp';
        sa.Column(
            "created_at", sa.TIMESTAMP(), nullable=True, server_default=sa.func.now()
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(length=250), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "item",
        sa.Column(
            "id",
            sa.UUID(as_uuid=True),
            nullable=False,
            server_default=sa.text("uuid_generate_v4()"),
        ),
        sa.Column(
            "created_at", sa.TIMESTAMP(), nullable=True, server_default=sa.func.now()
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("price", sa.REAL(), nullable=True),
        sa.Column("description", sa.String(length=250), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "inventory_item",
        sa.Column("inventory_id", sa.UUID(as_uuid=True), nullable=False),
        sa.Column("item_id", sa.UUID(as_uuid=True), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["inventory_id"],
            ["inventory.id"],
        ),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["item.id"],
        ),
        sa.PrimaryKeyConstraint("inventory_id", "item_id"),
    )
    op.create_index(
        op.f("ix_inventory_item_item_id"), "inventory_item", ["item_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_inventory_item_item_id"), table_name="inventory_item")
    op.drop_table("inventory_item")
    op.drop_table("item")
    op.drop_table("inventory")
    # ### end Alembic commands ###
